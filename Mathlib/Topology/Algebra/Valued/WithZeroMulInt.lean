/-
Copyright (c) 2025 Salvatore Mercuri. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Salvatore Mercuri
-/
import Mathlib.Topology.Algebra.Valued.ValuationTopology
import Mathlib.Algebra.GroupWithZero.Int

/-!
# Topological results for integer-valued rings

This file contains topological results for valuation rings taking values in the
multiplicative integers with zero adjoined. These are useful for cases where there
is a `Valued R ‚Ñ§‚Çò‚ÇÄ` instance but no canonical base with which to embed this into
`NNReal`.
-/

open Multiplicative WithZero WithZeroMulInt

open scoped Topology

namespace Valued.WithZeroMulInt

variable {R : Type*} [Ring R] [Valued R ‚Ñ§‚Çò‚ÇÄ]

open Set Filter in
/-- In a `‚Ñ§‚Çò‚ÇÄ`-valued ring, powers of `x` tend to zero if `v x ‚â§ ofAdd (-1 : ‚Ñ§)`. -/
theorem tendsto_zero_pow_of_le_neg_one {x : R} (hx : v x ‚â§ exp (-1 : ‚Ñ§)) :
    Tendsto (fun (n : ‚Ñï) => x ^ n) atTop (ùìù 0) := by
  simp only [(hasBasis_nhds_zero _ _).tendsto_right_iff, mem_setOf_eq, map_pow, eventually_atTop]
  refine fun Œ≥ _ => ‚ü®- (log Œ≥ - 1) |>.toNat, fun b hb => ?_‚ü©
  apply lt_of_le_of_lt (pow_le_pow_left‚ÇÄ zero_le' hx b) ?_
  rw [‚Üê Units.val_pow_eq_pow_val, exp_pow, ‚Üê lt_log_iff_exp_lt]
  omega

open Filter in
theorem exists_pow_lt_of_le_neg_one {x : R} (hx : v x ‚â§ exp (-1 : ‚Ñ§)) (Œ≥ : ‚Ñ§‚Çò‚ÇÄÀ£) :
    ‚àÉ n, v x ^ n < Œ≥ := by
  let ‚ü®n, hn‚ü© := eventually_atTop.1 <|
     (hasBasis_nhds_zero _ _ |>.tendsto_right_iff).1 (tendsto_zero_pow_of_le_neg_one hx) Œ≥ trivial
  exact ‚ü®n, by simpa using hn n le_rfl‚ü©

end Valued.WithZeroMulInt
